class Solution(object):
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        
        if n == 1:
            return 1

        # Create an array to store the number of ways to reach each step (dynamic programming)
        dp = [0] * (n + 1)     # the list to store the result for step 0 to n in array
        """
        if n = 5:   dp = [0] * (n + 1)
                    print(dp)  
        Output: [0, 0, 0, 0, 0, 0]
        """

        # Base cases
        dp[1] = 1   # from 1 step only
        dp[2] = 2   # from 1 step + 1 step or 2 steps
        # dp[3] = dp[2] + dp[1] = 3

        # Fill the array using the relation dp[i] = dp[i-1] + dp[i-2]
        for i in range(3, n + 1):
            dp[i] = dp[i - 1] + dp[i - 2]

        return dp[n]



n = 2
solution = Solution()
print(solution.climbStairs(n))
