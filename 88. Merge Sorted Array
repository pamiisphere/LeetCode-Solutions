class Solution(object):
    def merge(self, nums1, m, nums2, n):
        """
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: None Do not return anything, modify nums1 in-place instead.
        """

        # FOCUS AT NUMS1 as a main array
        # Start from the end of nums1 and nums2
        p1 = m - 1    # last element of nums1
        p2 = n - 1    # last element of nums2
        p = m + n - 1    # the position to insert element in nums1


        # Merge in reverse order
        while p1 >= 0 and p2 >= 0:      # to make sure that [0] is not included
            if nums1[p1] > nums2[p2]:
                nums1[p] = nums1[p1]    # insert the postion of nums2 in nums1 by using p
                p1 -= 1     # move backward
            else:
                nums1[p] = nums2[p2]
                p2 -= 1
            p -= 1

        # If nums2 is not fully merged, copy the rest of nums2 into nums1
        while p2 >= 0:
            nums1[p] = nums2[p2]
            p2 -= 1
            p -= 1


nums1 = [1,2,3,0,0,0]
m = 3
nums2 = [2,5,6]
n = 3
solution = Solution()
print(solution.merge(nums1, m, nums2, n))
