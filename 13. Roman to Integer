class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """

        # Define a mapping of Roman numerals to integers
        # The roman_to_int dictionary maps each Roman numeral to its integer value.
        roman_to_int = {
            'I': 1,
            'V': 5,
            'X': 10,
            'L': 50,
            'C': 100,
            'D': 500,
            'M': 1000
        }
        total = 0
        previous_value = 0 #to define whether the previous roman numeral is less or more than the next right number
        # Iterate through the Roman numeral string from right to left
        for char in reversed(s):
            current_value = roman_to_int[char]
            if current_value < previous_value:
                total -= current_value
            else:
                total += current_value
            previous_value = current_value #to use this value as the current value to add or subtract the next left number
        return total


s = "III"
solution = Solution()
print(solution.romanToInt(s))
